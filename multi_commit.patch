From bd3f50e4d3e3eb0d620411dddd7ef054702c5e52 Mon Sep 17 00:00:00 2001
From: josiahdc <josiah.chapman@gmail.com>
Date: Wed, 5 Oct 2022 12:54:37 -0700
Subject: [PATCH 1/4] Added Requirements

---
 requirements.txt | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 requirements.txt

diff --git a/requirements.txt b/requirements.txt
new file mode 100644
index 0000000..f678e82
--- /dev/null
+++ b/requirements.txt
@@ -0,0 +1 @@
+python-dateutil==2.8.2
\ No newline at end of file
-- 
2.42.0.windows.2


From 24707a7c3f267047838c97f07e5ff52284f7be6a Mon Sep 17 00:00:00 2001
From: Joe Ferrer <joe@theforage.com>
Date: Wed, 1 Mar 2023 00:10:28 +1100
Subject: [PATCH 2/4] Rename client and server files

---
 client.py => client3.py | 0
 server.py => server3.py | 0
 2 files changed, 0 insertions(+), 0 deletions(-)
 rename client.py => client3.py (100%)
 rename server.py => server3.py (100%)

diff --git a/client.py b/client3.py
similarity index 100%
rename from client.py
rename to client3.py
diff --git a/server.py b/server3.py
similarity index 100%
rename from server.py
rename to server3.py
-- 
2.42.0.windows.2


From 879221fec2b863d37d5b493f02a530a8098ef6ef Mon Sep 17 00:00:00 2001
From: Joe Ferrer <joe@theforage.com>
Date: Wed, 1 Mar 2023 00:11:51 +1100
Subject: [PATCH 3/4] Re-add sample unit test

---
 client_test.py | 25 +++++++++++++++++++++++++
 1 file changed, 25 insertions(+)
 create mode 100644 client_test.py

diff --git a/client_test.py b/client_test.py
new file mode 100644
index 0000000..af2bf26
--- /dev/null
+++ b/client_test.py
@@ -0,0 +1,25 @@
+import unittest
+from client3 import getDataPoint
+
+class ClientTest(unittest.TestCase):
+  def test_getDataPoint_calculatePrice(self):
+    quotes = [
+      {'top_ask': {'price': 121.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+    ]
+    """ ------------ Add the assertion below ------------ """
+
+  def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
+    quotes = [
+      {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+    ]
+    """ ------------ Add the assertion below ------------ """
+
+
+  """ ------------ Add more unit tests ------------ """
+
+
+
+if __name__ == '__main__':
+    unittest.main()
-- 
2.42.0.windows.2


From d9dbac4cbeac0fb02a2d956c8bbb7828f993155c Mon Sep 17 00:00:00 2001
From: spytrac <114122236+spytrac@users.noreply.github.com>
Date: Fri, 6 Oct 2023 12:54:15 -0700
Subject: [PATCH 4/4] Apply updates to meet requirements

---
 .history/client3_20231006115658.py | 59 ++++++++++++++++++++++++++++
 .history/client3_20231006124234.py | 59 ++++++++++++++++++++++++++++
 .history/client3_20231006124415.py | 61 +++++++++++++++++++++++++++++
 .history/client3_20231006124806.py | 63 ++++++++++++++++++++++++++++++
 .vscode/settings.json              |  6 +++
 0001-Re-add-sample-unit-test.patch | 44 +++++++++++++++++++++
 client3.py                         | 10 +++--
 7 files changed, 299 insertions(+), 3 deletions(-)
 create mode 100644 .history/client3_20231006115658.py
 create mode 100644 .history/client3_20231006124234.py
 create mode 100644 .history/client3_20231006124415.py
 create mode 100644 .history/client3_20231006124806.py
 create mode 100644 .vscode/settings.json
 create mode 100644 0001-Re-add-sample-unit-test.patch

diff --git a/.history/client3_20231006115658.py b/.history/client3_20231006115658.py
new file mode 100644
index 0000000..3fc09b7
--- /dev/null
+++ b/.history/client3_20231006115658.py
@@ -0,0 +1,59 @@
+################################################################################
+#
+#  Permission is hereby granted, free of charge, to any person obtaining a
+#  copy of this software and associated documentation files (the "Software"),
+#  to deal in the Software without restriction, including without limitation
+#  the rights to use, copy, modify, merge, publish, distribute, sublicense,
+#  and/or sell copies of the Software, and to permit persons to whom the
+#  Software is furnished to do so, subject to the following conditions:
+#
+#  The above copyright notice and this permission notice shall be included in
+#  all copies or substantial portions of the Software.
+#
+#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
+#  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+#  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
+#  DEALINGS IN THE SOFTWARE.
+
+import json
+import random
+import urllib.request
+
+# Server API URLs
+QUERY = "http://localhost:8080/query?id={}"
+
+# 500 server request
+N = 500
+
+
+def getDataPoint(quote):
+    """ Produce all the needed values to generate a datapoint """
+    """ ------------- Update this function ------------- """
+    stock = quote['stock']
+    bid_price = float(quote['top_bid']['price'])
+    ask_price = float(quote['top_ask']['price'])
+    price = bid_price
+    return stock, bid_price, ask_price, price
+
+
+def getRatio(price_a, price_b):
+    """ Get ratio of price_a and price_b """
+    """ ------------- Update this function ------------- """
+    return 1
+
+
+# Main
+if __name__ == "__main__":
+    # Query the price once every N seconds.
+    for _ in iter(range(N)):
+        quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
+
+        """ ----------- Update to get the ratio --------------- """
+        for quote in quotes:
+            stock, bid_price, ask_price, price = getDataPoint(quote)
+            print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
+
+        print("Ratio %s" % getRatio(price, price))
diff --git a/.history/client3_20231006124234.py b/.history/client3_20231006124234.py
new file mode 100644
index 0000000..b90d5f4
--- /dev/null
+++ b/.history/client3_20231006124234.py
@@ -0,0 +1,59 @@
+################################################################################
+#
+#  Permission is hereby granted, free of charge, to any person obtaining a
+#  copy of this software and associated documentation files (the "Software"),
+#  to deal in the Software without restriction, including without limitation
+#  the rights to use, copy, modify, merge, publish, distribute, sublicense,
+#  and/or sell copies of the Software, and to permit persons to whom the
+#  Software is furnished to do so, subject to the following conditions:
+#
+#  The above copyright notice and this permission notice shall be included in
+#  all copies or substantial portions of the Software.
+#
+#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
+#  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+#  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
+#  DEALINGS IN THE SOFTWARE.
+
+import json
+import random
+import urllib.request
+
+# Server API URLs
+QUERY = "http://localhost:8080/query?id={}"
+
+# 500 server request
+N = 500
+
+
+def getDataPoint(quote):
+    """ Produce all the needed values to generate a datapoint """
+    """ ------------- Update this function ------------- """
+    stock = quote['stock']
+    bid_price = float(quote['top_bid']['price'])
+    ask_price = float(quote['top_ask']['price'])
+    price = (bid_price+ask_price) / 2
+    return stock, bid_price, ask_price, price
+
+
+def getRatio(price_a, price_b):
+    """ Get ratio of price_a and price_b """
+    """ ------------- Update this function ------------- """
+    return price_a/price_b
+
+
+# Main
+if __name__ == "__main__":
+    # Query the price once every N seconds.
+    for _ in iter(range(N)):
+        quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
+
+        """ ----------- Update to get the ratio --------------- """
+        for quote in quotes:
+            stock, bid_price, ask_price, price = getDataPoint(quote)
+            print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
+
+        print("Ratio %s" % getRatio(price, price))
diff --git a/.history/client3_20231006124415.py b/.history/client3_20231006124415.py
new file mode 100644
index 0000000..264afcf
--- /dev/null
+++ b/.history/client3_20231006124415.py
@@ -0,0 +1,61 @@
+################################################################################
+#
+#  Permission is hereby granted, free of charge, to any person obtaining a
+#  copy of this software and associated documentation files (the "Software"),
+#  to deal in the Software without restriction, including without limitation
+#  the rights to use, copy, modify, merge, publish, distribute, sublicense,
+#  and/or sell copies of the Software, and to permit persons to whom the
+#  Software is furnished to do so, subject to the following conditions:
+#
+#  The above copyright notice and this permission notice shall be included in
+#  all copies or substantial portions of the Software.
+#
+#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
+#  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+#  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
+#  DEALINGS IN THE SOFTWARE.
+
+import json
+import random
+import urllib.request
+
+# Server API URLs
+QUERY = "http://localhost:8080/query?id={}"
+
+# 500 server request
+N = 500
+
+
+def getDataPoint(quote):
+    """ Produce all the needed values to generate a datapoint """
+    """ ------------- Update this function ------------- """
+    stock = quote['stock']
+    bid_price = float(quote['top_bid']['price'])
+    ask_price = float(quote['top_ask']['price'])
+    price = (bid_price+ask_price) / 2
+    return stock, bid_price, ask_price, price
+
+
+def getRatio(price_a, price_b):
+    """ Get ratio of price_a and price_b """
+    """ ------------- Update this function ------------- """
+    if (price_b==0):
+        return
+    return price_a/price_b
+
+
+# Main
+if __name__ == "__main__":
+    # Query the price once every N seconds.
+    for _ in iter(range(N)):
+        quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
+
+        """ ----------- Update to get the ratio --------------- """
+        for quote in quotes:
+            stock, bid_price, ask_price, price = getDataPoint(quote)
+            print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
+
+        print("Ratio %s" % getRatio(price["ABC"], price["DEF"]))
diff --git a/.history/client3_20231006124806.py b/.history/client3_20231006124806.py
new file mode 100644
index 0000000..28e52e6
--- /dev/null
+++ b/.history/client3_20231006124806.py
@@ -0,0 +1,63 @@
+################################################################################
+#
+#  Permission is hereby granted, free of charge, to any person obtaining a
+#  copy of this software and associated documentation files (the "Software"),
+#  to deal in the Software without restriction, including without limitation
+#  the rights to use, copy, modify, merge, publish, distribute, sublicense,
+#  and/or sell copies of the Software, and to permit persons to whom the
+#  Software is furnished to do so, subject to the following conditions:
+#
+#  The above copyright notice and this permission notice shall be included in
+#  all copies or substantial portions of the Software.
+#
+#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
+#  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+#  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
+#  DEALINGS IN THE SOFTWARE.
+
+import json
+import random
+import urllib.request
+
+# Server API URLs
+QUERY = "http://localhost:8080/query?id={}"
+
+# 500 server request
+N = 500
+
+
+def getDataPoint(quote):
+    """ Produce all the needed values to generate a datapoint """
+    """ ------------- Update this function ------------- """
+    stock = quote['stock']
+    bid_price = float(quote['top_bid']['price'])
+    ask_price = float(quote['top_ask']['price'])
+    price = (bid_price+ask_price) / 2
+    return stock, bid_price, ask_price, price
+
+
+def getRatio(price_a, price_b):
+    """ Get ratio of price_a and price_b """
+    """ ------------- Update this function ------------- """
+    if (price_b==0):
+        return
+    return price_a/price_b
+
+
+# Main
+if __name__ == "__main__":
+    # Query the price once every N seconds.
+    for _ in iter(range(N)):
+        quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
+
+        """ ----------- Update to get the ratio --------------- """
+        prices = {}
+        for quote in quotes:
+            stock, bid_price, ask_price, price = getDataPoint(quote)
+            prices[stock]= price
+            print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
+
+        print("Ratio %s" % getRatio(prices["ABC"], prices["DEF"]))
diff --git a/.vscode/settings.json b/.vscode/settings.json
new file mode 100644
index 0000000..d99f2f3
--- /dev/null
+++ b/.vscode/settings.json
@@ -0,0 +1,6 @@
+{
+    "[python]": {
+        "editor.defaultFormatter": "ms-python.black-formatter"
+    },
+    "python.formatting.provider": "none"
+}
\ No newline at end of file
diff --git a/0001-Re-add-sample-unit-test.patch b/0001-Re-add-sample-unit-test.patch
new file mode 100644
index 0000000..f4adbc1
--- /dev/null
+++ b/0001-Re-add-sample-unit-test.patch
@@ -0,0 +1,44 @@
+From 879221fec2b863d37d5b493f02a530a8098ef6ef Mon Sep 17 00:00:00 2001
+From: Joe Ferrer <joe@theforage.com>
+Date: Wed, 1 Mar 2023 00:11:51 +1100
+Subject: [PATCH] Re-add sample unit test
+
+---
+ client_test.py | 25 +++++++++++++++++++++++++
+ 1 file changed, 25 insertions(+)
+ create mode 100644 client_test.py
+
+diff --git a/client_test.py b/client_test.py
+new file mode 100644
+index 0000000..af2bf26
+--- /dev/null
++++ b/client_test.py
+@@ -0,0 +1,25 @@
++import unittest
++from client3 import getDataPoint
++
++class ClientTest(unittest.TestCase):
++  def test_getDataPoint_calculatePrice(self):
++    quotes = [
++      {'top_ask': {'price': 121.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
++      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
++    ]
++    """ ------------ Add the assertion below ------------ """
++
++  def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
++    quotes = [
++      {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
++      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
++    ]
++    """ ------------ Add the assertion below ------------ """
++
++
++  """ ------------ Add more unit tests ------------ """
++
++
++
++if __name__ == '__main__':
++    unittest.main()
+-- 
+2.42.0.windows.2
+
diff --git a/client3.py b/client3.py
index 3fc09b7..28e52e6 100644
--- a/client3.py
+++ b/client3.py
@@ -35,14 +35,16 @@ def getDataPoint(quote):
     stock = quote['stock']
     bid_price = float(quote['top_bid']['price'])
     ask_price = float(quote['top_ask']['price'])
-    price = bid_price
+    price = (bid_price+ask_price) / 2
     return stock, bid_price, ask_price, price
 
 
 def getRatio(price_a, price_b):
     """ Get ratio of price_a and price_b """
     """ ------------- Update this function ------------- """
-    return 1
+    if (price_b==0):
+        return
+    return price_a/price_b
 
 
 # Main
@@ -52,8 +54,10 @@ if __name__ == "__main__":
         quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
         """ ----------- Update to get the ratio --------------- """
+        prices = {}
         for quote in quotes:
             stock, bid_price, ask_price, price = getDataPoint(quote)
+            prices[stock]= price
             print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
-        print("Ratio %s" % getRatio(price, price))
+        print("Ratio %s" % getRatio(prices["ABC"], prices["DEF"]))
-- 
2.42.0.windows.2

